name: Build

on:
  push:
    paths:
      - '.github/**'
      - 'CI/config.yml'
      - 'src/**'
      - 'windows/**'
      - 'linux/**'
      - 'test/**'
  workflow_dispatch:

env:
  VERSION: 2.2.0.${{github.run_number}}
  LINUX_DIR: linux/build
  LINUX_LIB: libPinkRabbitMQ64.so
  PKG_DIR: package
  WIN_DIR: windows

jobs:
  buildLinux:
    runs-on: ubuntu-22.04
    name: Linux build
    services:
      rabbitmq:
        image: rabbitmq

    steps:
      - uses: actions/checkout@v2

      - run: apt install -y build-essential cmake libssl-dev libevent-dev uuid-dev

      - run: mkdir $LINUX_DIR

      - name: Configure CMake.
        working-directory: ${{env.LINUX_DIR}}
        run: cmake -DCMAKE_BUILD_TYPE=Release -DVERSION=${{env.VERSION}} ..

      - name: Build
        working-directory: ${{env.LINUX_DIR}}
        run: cmake --build .

      - name: Test
        working-directory: ${{env.LINUX_DIR}}
        run: ctest . -V

      - name: Upload Linux Library
        uses: actions/upload-artifact@v2.2.3
        with:
          name: ${{env.LINUX_LIB}}
          path: ${{env.LINUX_DIR}}/${{env.LINUX_LIB}}
          if-no-files-found: error
          retention-days: 1


  buildWindows:
    runs-on: windows-latest
    needs: [buildLinux]
    name: Windows build
    services:
      rabbitmq:
        image: rabbitmq

    steps:
      - uses: actions/checkout@v2

      - name: Download Linux Library
        uses: actions/download-artifact@v2.0.9
        with:
          name: ${{env.LINUX_LIB}}
          path: ${{env.PKG_DIR}}/

      - name: Remove Linux Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{env.LINUX_LIB}}

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
    
      - name: Test
        working-directory: ${{env.WIN_DIR}}
        run: msbuild msbuild.xml -t:runTests

      - name: Build
        working-directory: ${{env.WIN_DIR}}
        run: msbuild msbuild.xml -t:makeRelease -p:VERSION=${{env.VERSION}}

      - name: Release
        id: release
        uses: ncipollo/release-action@v1
        with:
          tag: prmq_${{github.run_number}}
          name: ${{ github.ref != 'refs/heads/master' && '[DEV] ' || '' }}PinkRabbitMQ v{{env.VERSION}}
          prerelease: ${{ github.ref != 'refs/heads/master' }}
          artifacts: '*.zip'
          commit: ${{github.ref}}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            [Новое в версии](https://github.com/BITERP/PinkRabbitMQ/blob/master/CHANGELOG.md)

            ${{ github.event.head_commit.message }}

            [Лог сборки](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})

